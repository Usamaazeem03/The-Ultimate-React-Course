// What is State?
_ State is basically is Data that a component can hold over time,necessary for information 
that it need to remember throughout the app's lifecycle.
_like "Component's memory ðŸ§ "
_"Stae variable"/"piece of state": A single variable in a component (component state)
_Updating component state triggers React to re-render the component.

ðŸ’« Summarizing 
.State allows dev to do two important things.
1_Update the component's view(by re-rendering it)
2_persist local variables between renders.

// One component, one State
_Each component has and manages its own state no matter how many times we render the same component.

// UI as a function of State
_The entire user interface, as a function of state.

// Practical Guidelines About State

ðŸ‘‰ Use a state variable for any data that the component should keep track of("remember) over time.
This is data that will change at some point.
In Vanilla JS, that's a let varable, or an [] or {}

ðŸ‘‰ Whenever you want smething in the component to be dynamic, create a piece of state related to that "thing", and update the state when the "thing" shold change (aka "be dynamic")
_Example: A modal widow can be open or closed.
So we create a state variable isOpen that tracks whether the nodal is open or not. on isOpen = true we display the window, o isOpen = false we hide it.

ðŸ‘‰ if you want to change the way a component look, or the data it displays, update its stare.
This usually happesns is an event handler fiunction.

ðŸ‘‰ when building a compomrnt, imagine its view as a reflection of state  changing over time .

ðŸ‘‰ For data that should not trigger component re-renders, don't use state. Use a regular variable instead. This is a common beginner mistake.