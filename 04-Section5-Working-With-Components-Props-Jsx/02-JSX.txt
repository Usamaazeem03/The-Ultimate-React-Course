// Deep understanding JSX.
ðŸ‘‰ Declarative syntax to describe what components look like and how they work.
ðŸ‘‰ components must return a block of JSX.
ðŸ‘‰ Extension fo javaScript that allows us to embed JavaScript, CSS and React componets into HTML.
ðŸ‘‰ Each JSX element is converted to a React.crearElement fiunction call

// JSX is Declarative
// what is Declarative?
ðŸ‘‰ Describe what UI should look like using KSX, hased on current data .
ðŸ‘‰ React is an abstraction away form DOM: we never touch touch the DOM.
ðŸ‘‰ Inderad,wer think of the UI as a reflection of the current data.

// what is Imperative?
ðŸ‘‰ Manual DOM element selections and DOM traversing.
ðŸ‘‰ Step-by-step DOM mutation until we reach the desired UI.

// Rules of JSX
ðŸ‘‰ Jsx works essentially like HTML, but we can enter "JavaScript" by using{}(for text or attributes).
ðŸ‘‰ We can place JavaScript expression inside{}, Example: referenc variables, create arrays or objects, [].map(), ternary oprator,
ðŸ‘‰ Statements are not allowed (if/else, for, switch).
ðŸ‘‰ Jsx Produces a JavaScript expression
const el = <h1>Hello React!</h1> 
const el = React.createElement("h1", null, "Hello React!")
1_ We can place other pieces of JSX inside{}
2_ We can write JSX anywhere inside a compoent (in if/else, assin to variables, pass it into functons)
ðŸ‘‰ A piece of JSX can only have one root element. if you need more, used <React.Fragment> (or the short <>).
